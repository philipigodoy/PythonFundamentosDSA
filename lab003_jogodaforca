# Hangman Game (Jogo da Forca)
# Programação Orientada a Objetos

# Import
import random

# Board (tabuleiro)
board = ['''

>>>>>>>>>>Hangman<<<<<<<<<<

+---+
|   |
    |
    |
    |
    |
=========''', '''

+---+
|   |
O   |
    |
    |
    |
=========''', '''

+---+
|   |
O   |
|   |
    |
    |
=========''', '''

 +---+
 |   |
 O   |
/|   |
     |
     |
=========''', '''

 +---+
 |   |
 O   |
/|\  |
     |
     |
=========''', '''

 +---+
 |   |
 O   |
/|\  |
/    |
     |
=========''', '''

 +---+
 |   |
 O   |
/|\  |
/ \  |
     |
=========''']


# Classe
class Hangman:

	# Método Construtor
	def __init__(self, word):
		self.word = word
		self.wrong_kick = 0
		self.right_kick = 0
		self.wrong_word = []
		self.right_word = []
		self.show_word = []
		
	# Método para adivinhar a letra
	def guess(self, letter):
		if letter in self.word:
			for i in range(len(self.word)):
				if letter == self.word[i]:
					del(self.show_word[i])
					self.show_word.insert(i,letter)
					self.right_word.append(letter)
					self.right_kick += 1
		else:
			self.wrong_word.append(letter)
			self.wrong_kick += 1
		
	# Método para verificar se o jogo terminou
	def hangman_over(self):
		if self.wrong_kick == 6:
			return True
		
	# Método para verificar se o jogador venceu
	def hangman_won(self):
		if self.right_kick == len(self.word):
			return True

	# Método para não mostrar a letra no board
	def hide_word(self):
		for i in range(len(self.word)):
			self.show_word.append("_")
		
	def clear(self):
		self.wrong_kick = 0
		self.right_kick = 0
		self.wrong_word = []
		self.right_word = []
		self.show_word = []


	# Método para checar o status do game e imprimir o board na tela
	def print_game_status(self):
		print(board[self.wrong_kick])
		print("Palavra: ")
		for word in self.show_word:
			print(word.strip(), end="")
			
		print("Palavras certas: ")
		for right in self.right_word:
			print(right)
		print("Palavras erradas: ")
		for wrong in self.wrong_word:
			print(wrong)

	#Metodo para limpar os dados após o termino do jogo
	def clear(self):
		self.wrong_kick = 0
		self.right_kick = 0
		self.wrong_word = []
		self.right_word = []
		self.show_word = []


# Função para ler uma palavra de forma aleatória do banco de palavras
def rand_word():
	with open("palavras.txt", "rt") as f:
		word = f.readlines()
	return word[random.randint(0,len(word))].strip()

# Função Main - Execução do Programa
def main():

	# Objeto
	game = Hangman(rand_word())
	game.hide_word()
	game.clear()
	# Enquanto o jogo não tiver terminado, print do status, solicita uma letra e faz a leitura do caracter
	while True:

		# Verifica o status do jogo
		game.print_game_status()

		#Solicita letra e verifica se existe
		letter = input("Digite uma letra: ")
		game.guess(letter)

		# De acordo com o status, imprime mensagem na tela para o usuário
		if game.hangman_won():
			print ('\nParabéns! Você venceu!!')
			break
		elif game.hangman_over():
			print ('\nGame over! Você perdeu.')
			print ('A palavra era ' + game.word)
			break


	
		
			
	print ('\nFoi bom jogar com você! Agora vá estudar!\n')

# Executa o programa		
if __name__ == "__main__":
	main()
